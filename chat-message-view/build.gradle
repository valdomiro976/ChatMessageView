apply plugin: 'com.android.library'
apply plugin: 'maven-publish' // <-- ADICIONE ESTA LINHA

// REMOVA OU COMENTE TODO ESSE BLOCO 'ext'
/*
ext {
    bintrayRepo = 'maven'
    bintrayName = 'chat-message-view'

    publishedGroupId = 'me.himanshusoni.chatmessageview'
    libraryName = 'chat-message-view'
    artifact = 'chat-message-view'

    libraryDescription = 'Android library to create chat message view easily'

    siteUrl = 'https://github.com/himanshu-soni/ChatMessageView'
    gitUrl = 'https://github.com/himanshu-soni/ChatMessageView.git'

    libraryVersion = '1.0.7'

    developerId = 'himanshu-soni'
    developerName = 'Himanshu Soni'
    developerEmail = 'himanshusoni.me@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}
*/

android {
    // Atualize para uma API moderna.
    compileSdkVersion 34 // <-- ATUALIZE AQUI!
    // buildToolsVersion "25.0.0" // <-- REMOVA OU COMENTE ESTA LINHA!
    // resourcePrefix "cmv_" // Mantenha se quiser

    // ADICIONE ESTA LINHA AQUI!
    namespace 'me.himanshusoni.chatmessageview' // <-- ADICIONE ESTA LINHA!

    defaultConfig {
        minSdkVersion 15 // Pode manter 15 ou aumentar para 21 ou 23 se quiser
        targetSdkVersion 34 // <-- ATUALIZE AQUI!
        versionCode 7
        versionName "1.0.7"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Se houver um bloco 'lintOptions', você pode querer desabilitar o abortOnError para
    // evitar falhas de build devido a warnings em código antigo.
    // lintOptions {
    //     abortOnError false
    // }
}

// REMOVA OU COMENTE ESTAS DUAS LINHAS!
// apply from: 'https://raw.githubusercontent.com/himanshu-soni/QuantityView/master/install.gradle'
// apply from: 'https://raw.githubusercontent.com/himanshu-soni/QuantityView/master/bintray.gradle'

dependencies {
    // Mude de 'compile fileTree' para 'implementation fileTree'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Mude de 'compile' para 'implementation'
    // Se você não for usar AndroidX, certifique-se de que a versão da Support Library é 28.0.0
    implementation 'com.android.support:support-annotations:28.0.0' // Era 25.1.1, atualize se não usa AndroidX
    implementation 'com.android.support:support-v4:28.0.0'       // Era 25.1.1, atualize se não usa AndroidX
}

// chat-message-view/build.gradle (NO FINAL DO ARQUIVO)
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // Mude esta linha para:
               from components.java // <-- MUDANÇA AQUI!

                groupId = 'com.github.valdomiro976'
                artifactId = 'chat-message-view'
                version = '3.0.5' // Mantenha a versão da tag que você vai criar (ex: v3.0.5)

                // ADICIONE ESTAS DUAS LINHAS:
                artifact sourcesJar // Adiciona o JAR de código-fonte
                artifact javadocJar // Adiciona o JAR de Javadoc
            }
        }
    }
}

// ADICIONE ESTE NOVO BLOCO TAMBÉM (PARA CRIAR OS JARS DE FONTES E JAVADOC):
task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.addStringOption('Xdoclint:none', '-quiet') // Suprime warnings de Javadoc
    options.addStringOption('encoding', 'UTF-8')
    failOnError false // Não falha o build por erros de Javadoc
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}
